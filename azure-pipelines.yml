# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main
- master
- develop

strategy:
  matrix:
    Python26:
      python.version: '2.6'
      NOSEOPTS: "--verbose"
      SETUPOPTS: ""
      PYLINTFILES: "azurelinuxagent setup.py makepkg.py tests"
      imageToUse: 'ubuntu-16.04'

pool:
  vmImage: '$(imageToUse)'

steps:
- task: UsePythonVersion@0
  condition: and(ne(variables[python.version], '3.4'), ne('variables[python.version]', '2.6'))
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    sudo add-apt-repository ppa:deadsnakes/ppa -y
    sudo apt-get update -y
    sudo apt install python2.6 -y
    sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.6 1
    sudo update-alternatives --config python
    PATH="/usr/bin/${PATH:+:${PATH}}"
    echo $PATH
    echo "Installed python2.6"
    python -V
    curl https://bootstrap.pypa.io/2.6/get-pip.py -o get-pip.py
    sudo python get-pip.py
    sudo python -m pip install --upgrade pip
    echo "Installed pip"
    sudo python -m pip -V
    echo "Default pip :"
    sudo pip -V
    echo "Installing requirements"
    sudo pip install -r requirements.txt
    sudo pip install -r test-requirements.txt
  displayName: 'Install dependencies'

- script: |
    echo export NOSEOPTS=\"$(NOSEOPTS)\"
    echo export SETUPOPTS=\"$(SETUPOPTS)\"
    echo export PYLINTOPTS=\"$(PYLINTOPTS)\"
    echo export PYLINTFILES=\"$(PYLINTFILES)\"
    echo echo PYTHON_VERSION=$PYTHON_VERSION
    exit 1
    export NOSEOPTS="$(NOSEOPTS)"
    export SETUPOPTS="$(SETUPOPTS)"
    export PYLINTOPTS="$(PYLINTOPTS)"
    export PYLINTFILES="$(PYLINTFILES)"
    EXIT_CODE=0
    ./ci/nosetests_only.sh || EXIT_CODE=$(($EXIT_CODE || $?))
    exit $EXIT_CODE
  displayName: 'Run Tests'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '$(System.DefaultWorkingDirectory)/**/nosetests.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    testRunTitle: 'Publish test results for Cobertura Python $(python.version)'